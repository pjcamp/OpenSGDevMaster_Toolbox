/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGGEOVECTORPROPERTYFIELDS_H_
#define _OSGGEOVECTORPROPERTYFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGDrawableDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class GeoVectorProperty;

OSG_GEN_CONTAINERPTR(GeoVectorProperty);

/*! \ingroup GrpDrawablesGeometryFieldTraits
    \ingroup GrpLibOSGDrawable
 */
template <>
struct FieldTraits<GeoVectorProperty *> :
    public FieldTraitsFCPtrBase<GeoVectorProperty *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<GeoVectorProperty *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DRAWABLE_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFGeoVectorPropertyPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFGeoVectorPropertyPtr"; }
};

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdGeoVectorPropertyPtr"; 
}


/*! \ingroup GrpDrawablesGeometryFieldTraits
 */
template <>
struct FieldTraits<GeoVectorProperty *, 1> :
    public FieldTraitsFCPtrBase<GeoVectorProperty *, 1>
{
  private:

  public:
    typedef FieldTraits<GeoVectorProperty *, 1>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DRAWABLE_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);
};

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakChildGeoVectorPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoVectorProperty *, 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdChildGeoVectorPropertyPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoVectorProperty *,
                      RecordedRefCountPolicy  > SFRecGeoVectorPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoVectorProperty *,
                      UnrecordedRefCountPolicy> SFUnrecGeoVectorPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoVectorProperty *,
                      WeakRefCountPolicy      > SFWeakGeoVectorPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoVectorProperty *,
                      NoRefCountPolicy        > SFUncountedGeoVectorPropertyPtr;


/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoVectorProperty *,
                      RecordedRefCountPolicy  > MFRecGeoVectorPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoVectorProperty *,
                      UnrecordedRefCountPolicy> MFUnrecGeoVectorPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoVectorProperty *,
                      WeakRefCountPolicy      > MFWeakGeoVectorPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoVectorProperty *,
                      NoRefCountPolicy        > MFUncountedGeoVectorPropertyPtr;



/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef ChildPointerSField<
          GeoVectorProperty *, 
          UnrecordedRefCountPolicy,
          1             > SFUnrecChildGeoVectorPropertyPtr;


/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef ChildPointerMField<
          GeoVectorProperty *, 
          UnrecordedRefCountPolicy,
          1             > MFUnrecChildGeoVectorPropertyPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFRecGeoVectorPropertyPtr : 
    public PointerSField<GeoVectorProperty *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFUnrecGeoVectorPropertyPtr : 
    public PointerSField<GeoVectorProperty *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFWeakGeoVectorPropertyPtr :
    public PointerSField<GeoVectorProperty *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFUncountedGeoVectorPropertyPtr :
    public PointerSField<GeoVectorProperty *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFRecGeoVectorPropertyPtr :
    public PointerMField<GeoVectorProperty *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFUnrecGeoVectorPropertyPtr :
    public PointerMField<GeoVectorProperty *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFWeakGeoVectorPropertyPtr :
    public PointerMField<GeoVectorProperty *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFUncountedGeoVectorPropertyPtr :
    public PointerMField<GeoVectorProperty *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFUnrecChildGeoVectorPropertyPtr :
    public ChildPointerSField<
        GeoVectorProperty *, 
        UnrecordedRefCountPolicy,
        1             > {};


/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFUnrecChildGeoVectorPropertyPtr :
    public ChildPointerMField<
        GeoVectorProperty *, 
        UnrecordedRefCountPolicy,
        1             > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGGEOVECTORPROPERTYFIELDS_H_ */
