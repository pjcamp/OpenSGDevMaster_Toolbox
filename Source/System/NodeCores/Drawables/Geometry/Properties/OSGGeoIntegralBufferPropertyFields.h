/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2006 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGGEOINTEGRALBUFFERPROPERTYFIELDS_H_
#define _OSGGEOINTEGRALBUFFERPROPERTYFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGDrawableDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE

class GeoIntegralBufferProperty;

OSG_GEN_CONTAINERPTR(GeoIntegralBufferProperty);

/*! \ingroup GrpDrawablesGeometryFieldTraits
    \ingroup GrpLibOSGDrawable
 */
template <>
struct FieldTraits<GeoIntegralBufferProperty *> :
    public FieldTraitsFCPtrBase<GeoIntegralBufferProperty *>
{
  private:

    static DataType             _type;

  public:

    typedef FieldTraits<GeoIntegralBufferProperty *>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DRAWABLE_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

//    static const char *getSName(void) { return "SFGeoIntegralBufferPropertyPtr"; }
    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

//    static const char *getMName(void) { return "MFGeoIntegralBufferPropertyPtr"; }
};

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 0>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdGeoIntegralBufferPropertyPtr"; 
}


/*! \ingroup GrpDrawablesGeometryFieldTraits
 */
template <>
struct FieldTraits<GeoIntegralBufferProperty *, 1> :
    public FieldTraitsFCPtrBase<GeoIntegralBufferProperty *, 1>
{
  private:

  public:
    typedef FieldTraits<GeoIntegralBufferProperty *, 1>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_DRAWABLE_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);
};

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakChildGeoIntegralBufferPropertyPtr"; 
}

template<> inline
const Char8 *FieldTraits<GeoIntegralBufferProperty *, 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdChildGeoIntegralBufferPropertyPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoIntegralBufferProperty *,
                      RecordedRefCountPolicy  > SFRecGeoIntegralBufferPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoIntegralBufferProperty *,
                      UnrecordedRefCountPolicy> SFUnrecGeoIntegralBufferPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoIntegralBufferProperty *,
                      WeakRefCountPolicy      > SFWeakGeoIntegralBufferPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef PointerSField<GeoIntegralBufferProperty *,
                      NoRefCountPolicy        > SFUncountedGeoIntegralBufferPropertyPtr;


/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoIntegralBufferProperty *,
                      RecordedRefCountPolicy  > MFRecGeoIntegralBufferPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoIntegralBufferProperty *,
                      UnrecordedRefCountPolicy> MFUnrecGeoIntegralBufferPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoIntegralBufferProperty *,
                      WeakRefCountPolicy      > MFWeakGeoIntegralBufferPropertyPtr;
/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef PointerMField<GeoIntegralBufferProperty *,
                      NoRefCountPolicy        > MFUncountedGeoIntegralBufferPropertyPtr;



/*! \ingroup GrpDrawablesGeometryFieldSFields */
typedef ChildPointerSField<
          GeoIntegralBufferProperty *, 
          UnrecordedRefCountPolicy,
          1             > SFUnrecChildGeoIntegralBufferPropertyPtr;


/*! \ingroup GrpDrawablesGeometryFieldMFields */
typedef ChildPointerMField<
          GeoIntegralBufferProperty *, 
          UnrecordedRefCountPolicy,
          1             > MFUnrecChildGeoIntegralBufferPropertyPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFRecGeoIntegralBufferPropertyPtr : 
    public PointerSField<GeoIntegralBufferProperty *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFUnrecGeoIntegralBufferPropertyPtr : 
    public PointerSField<GeoIntegralBufferProperty *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFWeakGeoIntegralBufferPropertyPtr :
    public PointerSField<GeoIntegralBufferProperty *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFUncountedGeoIntegralBufferPropertyPtr :
    public PointerSField<GeoIntegralBufferProperty *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFRecGeoIntegralBufferPropertyPtr :
    public PointerMField<GeoIntegralBufferProperty *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFUnrecGeoIntegralBufferPropertyPtr :
    public PointerMField<GeoIntegralBufferProperty *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFWeakGeoIntegralBufferPropertyPtr :
    public PointerMField<GeoIntegralBufferProperty *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFUncountedGeoIntegralBufferPropertyPtr :
    public PointerMField<GeoIntegralBufferProperty *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpDrawablesGeometryFieldSFields \ingroup GrpLibOSGDrawable */
struct SFUnrecChildGeoIntegralBufferPropertyPtr :
    public ChildPointerSField<
        GeoIntegralBufferProperty *, 
        UnrecordedRefCountPolicy,
        1             > {};


/*! \ingroup GrpDrawablesGeometryFieldMFields \ingroup GrpLibOSGDrawable */
struct MFUnrecChildGeoIntegralBufferPropertyPtr :
    public ChildPointerMField<
        GeoIntegralBufferProperty *, 
        UnrecordedRefCountPolicy,
        1             > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGGEOINTEGRALBUFFERPROPERTYFIELDS_H_ */
