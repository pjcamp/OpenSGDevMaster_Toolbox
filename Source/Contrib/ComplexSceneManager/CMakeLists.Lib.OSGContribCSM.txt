
OSG_ADD_PROJECT("OSGContribCSM")
OSG_SELECT_PROJECT()

##############################################################################
# dependencies
##############################################################################

##############################################################################
# simplify the tests below by setting local variables

SET(_CSM_HAS_NATIVE_WIN FALSE)

IF(GLUT_FOUND AND OSGBUILD_OSGWindowGLUT)
    SET(_BUILD_CSM_WINDOWGLUT ON)
ENDIF(GLUT_FOUND AND OSGBUILD_OSGWindowGLUT)

IF(WIN32 AND OSGBUILD_OSGWindowWIN32)
    SET(_BUILD_CSM_WINDOWWIN32 ON)
    SET(_CSM_HAS_NATIVE_WIN TRUE)
ENDIF(WIN32 AND OSGBUILD_OSGWindowWIN32)

IF(X11_FOUND AND OSGBUILD_OSGWindowX AND NOT APPLE)
    SET(_BUILD_CSM_WINDOWX ON)
    SET(_CSM_HAS_NATIVE_WIN TRUE)
ENDIF(X11_FOUND AND OSGBUILD_OSGWindowX AND NOT APPLE)

IF(APPLE AND OSG_CARBON_FRAMEWORK)
#    SET(_BUILD_CSM_WINDOWCARBON ON)
#    SET(_CSM_HAS_NATIVE_WIN TRUE)
ENDIF(APPLE AND OSG_CARBON_FRAMEWORK)

##############################################################################
# depdencies start here

SET(${PROJECT_NAME}_DEP_OSG_LIB OSGDrawable
                                OSGWindow
                                OSGFileIO
                                OSGDynamics
                                OSGUtil)

IF(OSGBUILD_OSGCluster)
    LIST(APPEND ${PROJECT_NAME}_DEP_OSG_LIB OSGCluster)
ELSE()
    SET(${PROJECT_NAME}_EXCL_FILES 
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindowBase.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindowBase.h
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindowBase.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindow.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindow.fcd
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindowFields.h
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindow.h
        ${CMAKE_CURRENT_SOURCE_DIR}/OSGCSMClusterWindow.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptionsBase.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptionsBase.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptionsBase.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptions.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptions.fcd
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptionsFields.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptions.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMClusterWinOptions.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptionsBase.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptionsBase.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptionsBase.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptions.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptions.fcd
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptionsFields.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptions.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMMultiWinOptions.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptionsBase.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptionsBase.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptionsBase.inl
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptions.cpp
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptions.fcd
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptionsFields.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptions.h
        ${CMAKE_CURRENT_SOURCE_DIR}/Helper/OSGCSMSortFirstWinOptions.inl)
ENDIF()

IF(_BUILD_CSM_WINDOWX)
    LIST(APPEND ${PROJECT_NAME}_DEP_OSG_LIB OSGWindowX)
ENDIF(_BUILD_CSM_WINDOWX)

IF(_BUILD_CSM_WINDOWCARBON)
    LIST(APPEND ${PROJECT_NAME}_DEP_OSG_LIB OSGWindowCarbon)
ENDIF(_BUILD_CSM_WINDOWCARBON)

IF(_BUILD_CSM_WINDOWGLUT)
    LIST(APPEND ${PROJECT_NAME}_DEP_OSG_LIB OSGWindowGLUT)

#    SET(${PROJECT_NAME}_DEP_INCDIR OSG_GLUT_INC_DIR)
IF(GLUT_FOUND)
    OSG_ADD_GLUTPACKAGE(FALSE)
ENDIF(GLUT_FOUND)
ENDIF(_BUILD_CSM_WINDOWGLUT)

IF(_BUILD_CSM_WINDOWWIN32)
    LIST(APPEND ${PROJECT_NAME}_DEP_OSG_LIB OSGWindowWIN32)
ENDIF(_BUILD_CSM_WINDOWWIN32)

IF(${Boost_MINOR_VERSION} LESS 35)
    SET(_OSG_CSM_BOOST_INC ${CMAKE_CURRENT_SOURCE_DIR}/External)
    LIST(APPEND ${PROJECT_NAME}_DEP_INCDIR _OSG_CSM_BOOST_INC)
ENDIF(${Boost_MINOR_VERSION} LESS 35)

SET(${PROJECT_NAME}_DEP_TEST_OSG_LIB OSGEffectGroups OSGImageFileIO)

IF(OSG_LINK_EXTERNAL_MODULES_TO_CSM)

    FOREACH(EXTERNAL ${OSG_EXTRA_EXTERNAL_MODULES})
      IF(NOT ${EXTERNAL}_CSM_IGNORE)
        LIST(APPEND ${PROJECT_NAME}_DEP_TEST_OSG_EEX_LIB ${EXTERNAL})
      ENDIF()
    ENDFOREACH(EXTERNAL)

ENDIF(OSG_LINK_EXTERNAL_MODULES_TO_CSM)

SET(${PROJECT_NAME}_CXXFLAGS ${OSG_ADD_CXX_FLAGS})

SET(${PROJECT_NAME}_NO_DOC TRUE)

OSG_STORE_PROJECT_DEPENDENCIES()

##############################################################################
# collect sources
##############################################################################

OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager")
OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Helper")
OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Sensor")
OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Sensor/InterfaceSensors")
OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Sensor/InterfaceSensors/Devices")
OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/VRMLNodes")

IF(GLUT_FOUND)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Passive")
ENDIF(GLUT_FOUND)


IF(_BUILD_CSM_WINDOWGLUT)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/GLUT")
ENDIF(_BUILD_CSM_WINDOWGLUT)

IF(OSG_ENABLE_NEW_SHADER)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Helper/Shader")
ENDIF(OSG_ENABLE_NEW_SHADER)

IF(_BUILD_CSM_WINDOWWIN32)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Native-WIN32")
ENDIF(_BUILD_CSM_WINDOWWIN32)

IF(_BUILD_CSM_WINDOWX)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Native-X")
ENDIF(_BUILD_CSM_WINDOWX)

IF(_BUILD_CSM_WINDOWCARBON)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Native-Carbon")
ENDIF(_BUILD_CSM_WINDOWCARBON)

IF(NOT _CSM_HAS_NATIVE_WIN)
    OSG_ADD_DIRECTORY("Source/Contrib/ComplexSceneManager/Native-Dummy")
ENDIF(NOT _CSM_HAS_NATIVE_WIN)

LIST(APPEND OSG_IGNORE_CLASSBUILD OSGCSMNativeWindow)

##############################################################################
# setup build
##############################################################################

OSG_SETUP_PROJECT("OSG_COMPILECONTRIBCSMLIB")
